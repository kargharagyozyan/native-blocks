{"version":3,"file":"gutenberg/index.js","mappings":"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","sources":["webpack://native-blocks/./node_modules/@wordpress/icons/build-module/library/arrow-down.js","webpack://native-blocks/./src/gutenberg/add-paragraph-option.js","webpack://native-blocks/./src/gutenberg/extend-toolbar.js","webpack://native-blocks/./src/gutenberg/titleMetaPanel.js","webpack://native-blocks/external window [\"wp\",\"blockEditor\"]","webpack://native-blocks/external window [\"wp\",\"components\"]","webpack://native-blocks/external window [\"wp\",\"compose\"]","webpack://native-blocks/external window [\"wp\",\"data\"]","webpack://native-blocks/external window [\"wp\",\"editPost\"]","webpack://native-blocks/external window [\"wp\",\"element\"]","webpack://native-blocks/external window [\"wp\",\"hooks\"]","webpack://native-blocks/external window [\"wp\",\"plugins\"]","webpack://native-blocks/external window [\"wp\",\"primitives\"]","webpack://native-blocks/external window \"ReactJSXRuntime\"","webpack://native-blocks/webpack/bootstrap","webpack://native-blocks/webpack/runtime/compat get default export","webpack://native-blocks/webpack/runtime/define property getters","webpack://native-blocks/webpack/runtime/hasOwnProperty shorthand","webpack://native-blocks/webpack/runtime/make namespace object","webpack://native-blocks/./src/gutenberg/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { SVG, Path } from '@wordpress/primitives';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst arrowDown = /*#__PURE__*/_jsx(SVG, {\n  xmlns: \"http://www.w3.org/2000/svg\",\n  viewBox: \"0 0 24 24\",\n  children: /*#__PURE__*/_jsx(Path, {\n    d: \"m16.5 13.5-3.7 3.7V4h-1.5v13.2l-3.8-3.7-1 1 5.5 5.6 5.5-5.6z\"\n  })\n});\nexport default arrowDown;\n//# sourceMappingURL=arrow-down.js.map","import { BlockSettingsMenuControls } from '@wordpress/block-editor';\nimport { MenuItem } from '@wordpress/components';\nimport { useDispatch, useSelect } from \"@wordpress/data\";\nimport { registerPlugin } from \"@wordpress/plugins\";\n\nconst ParagraphMenuAddon = () => {\n\t// Get the selected block, its clientId and attributes\n\tconst { selectedBlock, clientId, attributes } = useSelect((select) => {\n\t\tconst block = select('core/block-editor').getSelectedBlock();\n\t\treturn {\n\t\t\tselectedBlock: block,\n\t\t\tclientId: block ? block.clientId : null,\n\t\t\tattributes: block ? block.attributes : {},\n\t\t};\n\t}, []);\n\n\tconst { updateBlockAttributes } = useDispatch('core/block-editor');\n\n\tconst isParagraph = selectedBlock?.name === 'core/paragraph';\n\n\tconst onClickSelectAll = (onClose) => {\n\t\tconst newContent = (attributes.content || '') + 'Hello World' + ' ';\n\n\t\tupdateBlockAttributes(clientId, { content: newContent });\n\t\tonClose();\n\t};\n\n\tif (!isParagraph) return null;\n\n\treturn (\n\t\t<BlockSettingsMenuControls>\n\t\t\t{({ onClose }) => (\n\t\t\t\t<MenuItem\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tonClickSelectAll(onClose);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tSelect all\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\t\t</BlockSettingsMenuControls>\n\t);\n};\n\nregisterPlugin('custom-paragraph-menu', {\n\trender: ParagraphMenuAddon,\n});\n","import { createHigherOrderComponent } from '@wordpress/compose';\nimport { addFilter } from '@wordpress/hooks';\nimport { BlockControls } from '@wordpress/block-editor';\nimport {ToolbarGroup, ToolbarButton} from '@wordpress/components';\nimport { registerPlugin } from '@wordpress/plugins'\nimport {arrowDown} from \"@wordpress/icons\";\nimport { useDispatch } from '@wordpress/data';\n\nconst withNativeToolbarButton = createHigherOrderComponent(\n\t(BlockEdit) => (props) => {\n\t\tconst {name, isSelected, attributes, setAttributes, clientId} = props;\n\n\t\tif (name !== 'core/paragraph') {\n\t\t\treturn  <BlockEdit {...props}/>\n\t\t}\n\n\t\tconst { updateBlockAttributes } = useDispatch('core/block-editor');\n\n\t\tconst addText = () => {\n\t\t\tconst newContent = (attributes.content || '') + 'Hello World' + ' ';\n\n\t\t\tupdateBlockAttributes(clientId, {content: newContent})\n\t\t}\n\t\treturn (\n\t\t\t<>\n\t\t\t\t<BlockEdit {...props}/>\n\t\t\t\t{isSelected && (\n\t\t\t\t\t<BlockControls>\n\t\t\t\t\t\t<ToolbarGroup>\n\t\t\t\t\t\t\t<ToolbarButton\n\t\t\t\t\t\t\t\tonClick={addText}\n\t\t\t\t\t\t\t\tlabel=\"Click\"\n\t\t\t\t\t\t\t\ticon={arrowDown}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ToolbarGroup>\n\t\t\t\t\t</BlockControls>\n\t\t\t\t)}\n\t\t\t</>\n\t\t)\n\t},\n\t'withNativeToolbarButton'\n)\n\naddFilter(\n\t'editor.BlockEdit',\n\t'native-blocks',\n\twithNativeToolbarButton\n);\n\nregisterPlugin('native-blocks-paragraph-toolbar', {\n\trender: withNativeToolbarButton,\n});\n","import { registerPlugin } from '@wordpress/plugins';\nimport { PluginDocumentSettingPanel } from '@wordpress/edit-post';\nimport { PanelBody, Button, Spinner } from '@wordpress/components';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { useState, useRef } from '@wordpress/element';\n\nconst TitleMetaPanel = () => {\n\tconst title = useSelect(\n\t\tselect => select('core/editor').getEditedPostAttribute('title'),\n\t\t[]\n\t);\n\n\tconst [isLoading, setIsLoading] = useState(false);\n\tconst count = useRef(0);\n\tconst { editPost } = useDispatch('core/editor');\n\n\tconst handleButton = () => {\n\t\tsetIsLoading(true);\n\n\t\tsetTimeout(() => {\n\t\t\tsetIsLoading(false);\n\t\t\tcount.current += 1;\n\t\t\teditPost({ title: `The Title changed ${count.current} times` });\n\t\t}, 2000);\n\t};\n\n\treturn (\n\t\t<PluginDocumentSettingPanel\n\t\t\tname=\"title-meta-pane\"\n\t\t\ttitle=\"Custom Title Control\"\n\t\t>\n\t\t\t<PanelBody>\n\t\t\t\t<Button\n\t\t\t\t\tonClick={handleButton}\n\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\ticon={isLoading ? <Spinner /> : undefined}\n\t\t\t\t>\n\t\t\t\t\t{isLoading ? 'Updating...' : 'Change Title'}\n\t\t\t\t</Button>\n\t\t\t</PanelBody>\n\t\t</PluginDocumentSettingPanel>\n\t);\n};\n\nregisterPlugin('title-meta-panel', {\n\trender: TitleMetaPanel,\n});\n","module.exports = window[\"wp\"][\"blockEditor\"];","module.exports = window[\"wp\"][\"components\"];","module.exports = window[\"wp\"][\"compose\"];","module.exports = window[\"wp\"][\"data\"];","module.exports = window[\"wp\"][\"editPost\"];","module.exports = window[\"wp\"][\"element\"];","module.exports = window[\"wp\"][\"hooks\"];","module.exports = window[\"wp\"][\"plugins\"];","module.exports = window[\"wp\"][\"primitives\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\nimport './add-paragraph-option';\nimport './titleMetaPanel';\nimport './extend-toolbar';\n"],"names":["BlockSettingsMenuControls","MenuItem","useDispatch","useSelect","registerPlugin","jsx","_jsx","ParagraphMenuAddon","selectedBlock","clientId","attributes","select","block","getSelectedBlock","updateBlockAttributes","isParagraph","name","onClickSelectAll","onClose","newContent","content","children","onClick","render","createHigherOrderComponent","addFilter","BlockControls","ToolbarGroup","ToolbarButton","arrowDown","Fragment","_Fragment","jsxs","_jsxs","withNativeToolbarButton","BlockEdit","props","isSelected","setAttributes","addText","label","icon","PluginDocumentSettingPanel","PanelBody","Button","Spinner","useState","useRef","TitleMetaPanel","title","getEditedPostAttribute","isLoading","setIsLoading","count","editPost","handleButton","setTimeout","current","disabled","undefined"],"sourceRoot":""}